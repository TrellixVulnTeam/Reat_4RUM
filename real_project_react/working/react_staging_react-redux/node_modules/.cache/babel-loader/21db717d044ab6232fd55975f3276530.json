{"ast":null,"code":"var _jsxFileName = \"/Users/jinpengwu/Desktop/react/gitproject/react1/real_project_react/working/react_staging_react-redux/src/components/Person/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createAddPerson } from \"../../redux/action/person\";\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Person extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addPerson = () => {\n      const newperson = {\n        id: nanoid(),\n        name: this.settingName.value,\n        age: this.settingAge.value\n      };\n      this.props.addPerson(newperson);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: v => this.settingName = v\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), \": Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: v => this.settingAge = v\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), \": Age\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addPerson,\n        children: \"add Person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.props.person.map(v => {\n            /*#__PURE__*/\n            _jsxDEV(\"li\", {\n              children: [\"Name:\", v.name, \"---Age: \", v.age]\n            }, v.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  person: state.personReducer\n}), {\n  addPerson: createAddPerson\n})(Person);","map":{"version":3,"sources":["/Users/jinpengwu/Desktop/react/gitproject/react1/real_project_react/working/react_staging_react-redux/src/components/Person/index.js"],"names":["React","Component","connect","createAddPerson","nanoid","Person","addPerson","newperson","id","name","settingName","value","age","settingAge","props","render","v","person","map","state","personReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,eAAR,QAA8B,2BAA9B;AACA,SAAQC,MAAR,QAAqB,QAArB;;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC3BK,SAD2B,GACf,MAAK;AACb,YAAMC,SAAS,GAAG;AAACC,QAAAA,EAAE,EAACJ,MAAM,EAAV;AAAaK,QAAAA,IAAI,EAAC,KAAKC,WAAL,CAAiBC,KAAnC;AAAyCC,QAAAA,GAAG,EAAC,KAAKC,UAAL,CAAgBF;AAA7D,OAAlB;AACA,WAAKG,KAAL,CAAWR,SAAX,CAAqBC,SAArB;AACH,KAJ0B;AAAA;;AAM3BQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAO,QAAA,GAAG,EAAIC,CAAC,IAAI,KAAKN,WAAL,GAAmBM;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,yBAEI;AAAO,QAAA,GAAG,EAAIA,CAAC,IAAI,KAAKH,UAAL,GAAkBG;AAArC;AAAA;AAAA;AAAA;AAAA,cAFJ,wBAGI;AAAQ,QAAA,OAAO,EAAE,KAAKV,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,+BACI;AAAA,oBAEO,KAAKQ,KAAL,CAAWG,MAAX,CAAkBC,GAAlB,CAAuBF,CAAD,IAAO;AACzB;AAAA;AAAA,kCAAqBA,CAAC,CAACP,IAAvB,cAAqCO,CAAC,CAACJ,GAAvC;AAAA,eAASI,CAAC,CAACR,EAAX;AAAA;AAAA;AAAA;AAAA;AACH,WAFD;AAFP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AAzB0B;;AA2B/B,eAAeN,OAAO,CAClBiB,KAAK,KAAI;AACLF,EAAAA,MAAM,EAACE,KAAK,CAACC;AADR,CAAJ,CADa,EAIlB;AACId,EAAAA,SAAS,EAACH;AADd,CAJkB,CAAP,CAQbE,MARa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {createAddPerson} from \"../../redux/action/person\"\nimport {nanoid} from 'nanoid'\n\nclass Person extends Component {\n    addPerson = () =>{\n        const newperson = {id:nanoid(),name:this.settingName.value,age:this.settingAge.value}\n        this.props.addPerson(newperson)    \n    }\n\n    render() {\n        return (\n            <div>\n                <input ref = {v => this.settingName = v}/>: Name\n                <input ref = {v => this.settingAge = v}/>: Age \n                <button onClick={this.addPerson}>add Person</button>\n                <div>\n                    <ul>\n                        {\n                           this.props.person.map((v) => {\n                               <li key={v.id}>Name:{v.name}---Age: {v.age}</li>\n                           }) \n\n                        }\n                        \n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\nexport default connect(\n    state =>({\n        person:state.personReducer\n    }),\n    {\n        addPerson:createAddPerson\n    }\n\n)(Person)\n"]},"metadata":{},"sourceType":"module"}